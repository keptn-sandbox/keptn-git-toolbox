// Code generated by MockGen. DO NOT EDIT.
// Source: triggerDeploy.go

// Package cmd is a generated GoMock package.
package cmd

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDeployment is a mock of Deployment interface.
type MockDeployment struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentMockRecorder
}

// MockDeploymentMockRecorder is the mock recorder for MockDeployment.
type MockDeploymentMockRecorder struct {
	mock *MockDeployment
}

// NewMockDeployment creates a new mock instance.
func NewMockDeployment(ctrl *gomock.Controller) *MockDeployment {
	mock := &MockDeployment{ctrl: ctrl}
	mock.recorder = &MockDeploymentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeployment) EXPECT() *MockDeploymentMockRecorder {
	return m.recorder
}

// RunDeployment mocks base method.
func (m *MockDeployment) RunDeployment() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunDeployment")
	ret0, _ := ret[0].(error)
	return ret0
}

// RunDeployment indicates an expected call of RunDeployment.
func (mr *MockDeploymentMockRecorder) RunDeployment() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunDeployment", reflect.TypeOf((*MockDeployment)(nil).RunDeployment))
}
